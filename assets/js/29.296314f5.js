(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{360:function(a,s,t){a.exports=t.p+"assets/img/ava.3cec7bf8.png"},361:function(a,s,t){a.exports=t.p+"assets/img/viz.2ef168a3.png"},362:function(a,s,t){a.exports=t.p+"assets/img/pangene.75fa9b58.png"},363:function(a,s,t){a.exports=t.p+"assets/img/app.dae996c4.png"},385:function(a,s,t){"use strict";t.r(s);var e=t(15),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"use-cases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[a._v("#")]),a._v(" Use Cases")]),a._v(" "),s("p",[a._v("This section provides a comprehensive end-to-end example of how to run the "),s("a",{attrs:{href:"https://github.com/davidebolo1993/cosigt",target:"_blank",rel:"noopener noreferrer"}},[a._v("cosigt"),s("OutboundLink")],1),a._v(" pipeline. The rationale of the pipeline is explained in greater detail in the "),s("RouterLink",{attrs:{to:"/workflow/workflow.html"}},[a._v("â†’ workflow section")]),a._v(".")],1),a._v(" "),s("h2",{attrs:{id:"data-acquisition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data-acquisition"}},[a._v("#")]),a._v(" Data Acquisition")]),a._v(" "),s("p",[a._v("We create a minimal test dataset to demonstrate cosigt functionality using publicly available data. Let's start by creating a test directory:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" cosigt_test\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" cosigt_test\n")])])]),s("h3",{attrs:{id:"required-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#required-tools"}},[a._v("#")]),a._v(" Required Tools")]),a._v(" "),s("p",[a._v("Several tools are necessary to complete the following sections. The most straightforward approach is to install them using "),s("a",{attrs:{href:"https://docs.conda.io/projects/conda/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("conda"),s("OutboundLink")],1),a._v(" or similar package managers, as shown below.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("micromamba create "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" use_cases_env "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" bioconda "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" conda-forge "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    samtools "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    odgi "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    agc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    mash "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    bedtools\nmicromamba activate "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/use_cases_env\n")])])]),s("h3",{attrs:{id:"sequencing-reads"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sequencing-reads"}},[a._v("#")]),a._v(" Sequencing Reads")]),a._v(" "),s("p",[a._v("The cosigt pipeline requires sequencing reads previously aligned to a reference genome in standard "),s("a",{attrs:{href:"https://samtools.github.io/hts-specs/SAMv1.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("bam"),s("OutboundLink")],1),a._v(" or "),s("a",{attrs:{href:"https://samtools.github.io/hts-specs/CRAMv3.pdf",target:"_blank",rel:"noopener noreferrer"}},[a._v("cram"),s("OutboundLink")],1),a._v(" format. We can obtain suitable alignment files from the "),s("a",{attrs:{href:"https://www.internationalgenome.org/data-portal/data-collection/30x-grch38",target:"_blank",rel:"noopener noreferrer"}},[a._v("1000 Genomes Project"),s("OutboundLink")],1),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" alignments\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" alignments\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download the complete sample index")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://ftp-trace.ncbi.nlm.nih.gov/1000genomes/ftp/1000G_2504_high_coverage/additional_698_related/1000G_698_related_high_coverage.sequence.index\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Select a couple of samples")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"HG00438|HG01952"')]),a._v(" 1000G_698_related_high_coverage.sequence.index "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" 1000G.selected.txt\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Add their index files")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/$/.crai/'")]),a._v(" 1000G.selected.txt "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" 1000G.selected.txt\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download the selected files")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" 1000G.selected.txt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("h3",{attrs:{id:"reference-genome"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference-genome"}},[a._v("#")]),a._v(" Reference Genome")]),a._v(" "),s("p",[a._v("A reference genome is required for two purposes: extracting region-specific reads from the original alignments (if in cram format) and serving as one of the assemblies against which samples are compared. In this example, reads are aligned to "),s("a",{attrs:{href:"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/GRCh38_reference_genome/",target:"_blank",rel:"noopener noreferrer"}},[a._v("GRCh38"),s("OutboundLink")],1),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" reference\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" reference\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download the reference genome")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/GRCh38_reference_genome/GRCh38_full_analysis_set_plus_decoy_hla.fa\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download its index")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/GRCh38_reference_genome/GRCh38_full_analysis_set_plus_decoy_hla.fa.fai\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("h3",{attrs:{id:"genome-assemblies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#genome-assemblies"}},[a._v("#")]),a._v(" Genome Assemblies")]),a._v(" "),s("p",[a._v("The cosigt pipeline begins with individual haplotypes to construct pangenome graphs of regions targeted for genotyping. Our workflow expects haplotypes to be grouped by their corresponding reference chromosome. Below are two alternative strategies for generating such chromosome-specific assemblies, which users can choose based on their available data.")]),a._v(" "),s("h4",{attrs:{id:"option-1-starting-from-a-chromosome-specific-graph"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-1-starting-from-a-chromosome-specific-graph"}},[a._v("#")]),a._v(" Option 1: Starting from a Chromosome-Specific Graph")]),a._v(" "),s("p",[a._v("One approach is to extract haplotypes for specific chromosomes from existing chromosome-specific pangenome graphs. For example, "),s("a",{attrs:{href:"https://github.com/human-pangenomics/HPP_Year1_Assemblies",target:"_blank",rel:"noopener noreferrer"}},[a._v("Year 1"),s("OutboundLink")],1),a._v(" of the "),s("a",{attrs:{href:"https://humanpangenome.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Human Pangenome Reference Consortium (HPRC)"),s("OutboundLink")],1),a._v(" provides "),s("a",{attrs:{href:"https://s3-us-west-2.amazonaws.com/human-pangenomics/index.html?prefix=pangenomes/freeze/freeze1/pggb/chroms/",target:"_blank",rel:"noopener noreferrer"}},[a._v("such data"),s("OutboundLink")],1),a._v(". We'll limit our analysis to "),s("code",[a._v("chr4")]),a._v(" and "),s("code",[a._v("chr6")]),a._v(" since these contain our "),s("a",{attrs:{href:"#regions-of-interest"}},[a._v("regions of interest")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" assemblies_a\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" assemblies_a\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download chromosome-specific pangenome graphs")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://s3-us-west-2.amazonaws.com/human-pangenomics/pangenomes/freeze/freeze1/pggb/chroms/chr4.hprc-v1.0-pggb.gfa.gz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://s3-us-west-2.amazonaws.com/human-pangenomics/pangenomes/freeze/freeze1/pggb/chroms/chr6.hprc-v1.0-pggb.gfa.gz\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download AGC (Assembly Graph Container)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://zenodo.org/record/5826274/files/HPRC-yr1.agc?download"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" HPRC-yr1.agc \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Process each chromosome to subset HG00438, HG01952, plus 8 additional samples")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("chr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" chr4 chr6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Extract all contig IDs")]),a._v("\n    zgrep "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^P"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$chr")]),a._v('.hprc-v1.0-pggb.gfa.gz"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.all_ids.txt"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Subset to our samples of interest")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^HG00438#|^HG01952#"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.all_ids.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.txt"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Add 8 additional samples for diversity")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^HG00438#|^HG01952#"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.all_ids.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" -d"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'#'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"^'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('#"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.all_ids.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.txt"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.all_ids.txt"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Extract FASTA sequences")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n        agc getctg HPRC-yr1.agc "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" bgzip -@ "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.fasta.gz"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.txt"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Index the FASTA file")]),a._v("\n    samtools faidx "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.fasta.gz"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("This represents just one possible strategy for subsetting assemblies from chromosome-specific pangenome graphs. Alternatively, you can subset the initial .gfa to paths of interest using "),s("code",[a._v("odgi paths -i GRAPH.GFA -K PATHS.TXT -o SUBGRAPH.OG")]),a._v(" and then extract the assemblies as FASTA from the subgraph with "),s("code",[a._v("odgi paths -i SUBGRAPH.OG -f > SUBSET.FASTA")]),a._v(".")])]),a._v(" "),s("h4",{attrs:{id:"option-2-starting-from-individual-haplotypes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#option-2-starting-from-individual-haplotypes"}},[a._v("#")]),a._v(" Option 2: Starting from Individual Haplotypes")]),a._v(" "),s("p",[a._v("An alternative approach is to determine which reference chromosome each sample-specific haplotype most likely belongs to using "),s("a",{attrs:{href:"https://genomebiology.biomedcentral.com/articles/10.1186/s13059-016-0997-x",target:"_blank",rel:"noopener noreferrer"}},[a._v("Mash distances"),s("OutboundLink")],1),a._v(". This method doesn't require chromosome-specific graphs and can start directly from individual assemblies:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" assemblies_b\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" assemblies_b\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Reference to AGC from previous step")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("agc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"../assemblies_a/HPRC-yr1.agc"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Extract individual IDs")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ids")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"#"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1,2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/assemblies_a/*fai "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s/#/./g'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download corresponding FASTA files")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ids")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    agc getset "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$agc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" bgzip -@ "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v(".fasta.gz\n    samtools faidx "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v(".fasta.gz\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Create a sketch of the reference")]),a._v("\nmash sketch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("id")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ids")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Calculate distances (each contig vs reference chromosomes)")]),a._v("\n    mash dist "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa.msh "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('.fasta.gz"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('.tsv"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Identify contigs with chr4/chr6 as best matches")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('.tsv"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("best")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$f")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('.tsv"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k3n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("chr")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$best")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $1}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("hap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$best")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $2}'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$chr")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"chr4"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$chr")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"chr6"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n            samtools faidx "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('.fasta.gz"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$hap")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" bgzip -@ "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.fasta.gz"')]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('.tsv"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Index the resulting chromosome-specific files")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("chr")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" chr4 chr6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    samtools faidx "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${chr}")]),a._v('.subset.fasta.gz"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),s("h3",{attrs:{id:"regions-of-interest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regions-of-interest"}},[a._v("#")]),a._v(" Regions of Interest")]),a._v(" "),s("p",[a._v("One final piece of information required for the pipeline is a list of target regions located on the chromosomes for which we have assemblies (chromosomes 6 and 4 in this example). Notable examples include the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Complement_component_4",target:"_blank",rel:"noopener noreferrer"}},[a._v("C4"),s("OutboundLink")],1),a._v(" and "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Glycophorin_A",target:"_blank",rel:"noopener noreferrer"}},[a._v("GYPA"),s("OutboundLink")],1),a._v(" loci:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" regions\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" regions\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GYPA region")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"chr4'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("144109303"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("144140751"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v('GYPA"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" roi.bed\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# C4 region")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"chr6'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("31972057"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("32055418"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v('C4"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" roi.bed\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("h3",{attrs:{id:"annotations-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotations-optional"}},[a._v("#")]),a._v(" Annotations (optional)")]),a._v(" "),s("p",[a._v("You can optionally provide gene annotation and protein translation files to the pipeline. If supplied, the pipeline will build gene graphs using "),s("a",{attrs:{href:"https://github.com/lh3/pangene",target:"_blank",rel:"noopener noreferrer"}},[a._v("pangene"),s("OutboundLink")],1),a._v(" allowing gene projection onto the assemblies for the regions of interest.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" annotations\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" annotations\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download GTF annotation")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_48/gencode.v48.annotation.gtf.gz\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download and index protein-coding transcript translations")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_48/gencode.v48.pc_translations.fa.gz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("gzip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" gencode.v48.pc_translations.fa.gz\nbgzip gencode.v48.pc_translations.fa\nsamtools faidx gencode.v48.pc_translations.fa.gz\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("h3",{attrs:{id:"haplotype-exclusion-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#haplotype-exclusion-optional"}},[a._v("#")]),a._v(" Haplotype exclusion (optional)")]),a._v(" "),s("p",[a._v("You may optionally provide a list of regions identified by "),s("a",{attrs:{href:"https://github.com/mobinasri/flagger",target:"_blank",rel:"noopener noreferrer"}},[a._v("flagger"),s("OutboundLink")],1),a._v(" in BED format to exclude potentially misassembled haplotype blocks from downstream analyses. The following strategy downloads the Flagger index and corresponding BED files for our assemblies of interest, then generates a unified exclusion file:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" flagger\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" flagger\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Download Flagger index")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://raw.githubusercontent.com/human-pangenomics/HPP_Year1_Assemblies/12656b82a42cd4ec6d421abe7fd4ebdeca74b41c/annotation_index/Year1_assemblies_v2_genbank_Flagger.index\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Extract assembly names and download corresponding BEDs")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/assemblies_a/*fai "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"#"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("link")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" $f Year1_assemblies_v2_genbank_Flagger.index "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("clink")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" $link "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s,s3://,https://s3-us-west-2.amazonaws.com/,'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$clink")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Merge and sort all exclusion regions")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("-3 *bed "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" bedtools "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" flagger.exclude.bed\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),s("h3",{attrs:{id:"clone-cosigt-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clone-cosigt-repository"}},[a._v("#")]),a._v(" Clone cosigt Repository")]),a._v(" "),s("p",[a._v("Clone the cosigt repository from "),s("a",{attrs:{href:"https://github.com/davidebolo1993/cosigt",target:"_blank",rel:"noopener noreferrer"}},[a._v("GitHub"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("micromamba activate smk7324app132\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/davidebolo1993/cosigt\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" cosigt\n")])])]),s("p",[a._v("For the environment setup, refer to the "),s("RouterLink",{attrs:{to:"/setup/setup.html"}},[a._v("â†’ setup section")]),a._v(".")],1),a._v(" "),s("h2",{attrs:{id:"configure-and-run-the-workflow-master-and-ancient-dna-branches"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-and-run-the-workflow-master-and-ancient-dna-branches"}},[a._v("#")]),a._v(" Configure and run the workflow ("),s("code",[a._v("master")]),a._v(" and "),s("code",[a._v("ancient_dna")]),a._v(" branches)")]),a._v(" "),s("p",[a._v("With all necessary data prepared, we can now configure the pipeline using the "),s("a",{attrs:{href:"https://github.com/davidebolo1993/cosigt/blob/master/cosigt_smk/workflow/scripts/organize.py",target:"_blank",rel:"noopener noreferrer"}},[a._v("dedicated setup script"),s("OutboundLink")],1),a._v(". The "),s("code",[a._v("organize.py")]),a._v(" script of the "),s("code",[a._v("master")]),a._v(" and "),s("code",[a._v("ancient_dna")]),a._v(" branches of the pipeline accepts the arguments listed below:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Confirm you're on the master branch")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rev-parse --abbrev-ref HEAD\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Should return 'master'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" cosigt_smk\npython workflow/scripts/organize.py "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v("\n")])])]),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("COsine SImilarity-based GenoTyper\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nRequired I/O arguments:\n  -a FASTA, --assemblies FASTA\n                        assemblies individuals to -r will be genotyped against. This is a tab-separated file mapping chromosomes in -b to a FASTA with contigs for that chromosome. FASTA can be bgzip-compressed and must be indexed\n  -g FASTA, --genome FASTA\n                        reference genome. This is the FASTA regions to -b refers to. FASTA can be bgzip-compressed and must be indexed\n  -r FOLDER, --reads FOLDER\n                        individuals to genotype. This is a folder with individual reads aligned to a reference genome (same to -g) in BAM/CRAM format. Alignment files must be indexed (BAI,CSI/CRAI) and will be searched recursively\n  -b BED, --bed BED     regions to genotype. A standard 3-column BED file, but can have a 4th column to label the region and a\n                        5th column listing comma-separated alternative contigs for that region\n  -o FOLDER, --output FOLDER\n                        output folder. This is where results from cosigt pipeline will be stored\n\nOptional arguments:\n  --map                 tab-separated file mapping each alignment file (1st column) to an id (2nd column). Guess the name removing file extension otherwise [None]\n  --gtf                 Gene annotation on the reference chromosomes in GTF format [None]\n  --proteins            Protein-coding transcript translation sequences in FASTA format. FASTA can be bgzip-compressed and must be indexed [None]\n  --tmp                 tmp directory. Will be used by tools for which a tmp directory can be specified [/tmp]\n  --pansn               PanSN prefix naming for the reference genome [grch38#1#]\n  --profile             snakemake profile, if available [None]\n  --blacklist           list of contigs to blacklist - these will not be used during genotyping [None]\n  --flagger             regions to exclude for each contigs. This is a standard BED file coming from flagger, with contigs names matching those of the assemblies in -a [None]\n  --conda               prepare for running using conda instead of singularity [False]\n  --threads             run snakemake using that many cores - ignored if using a profile [32]\n")])])]),s("p",[a._v("For the current use-case, inputs to "),s("code",[a._v("organize.py")]),a._v(" are the following:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Assemblies map")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/asm_map.tsv\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/assemblies_a/*.fasta.gz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("basename")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$f")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"."')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$f")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/asm_map.tsv\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("assemblies")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/asm_map.tsv"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Reference genome")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("genome")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Read alignments")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("reads")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/alignments"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Genotyping regions")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("bed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/regions/roi.bed"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Output directory")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/cosigt_results"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Sample map (optional)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/sample_map.tsv\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/alignments/*.cram"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("basename")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$s")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cut")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"."')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$s")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/sample_map.tsv\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("map")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/sample_map.tsv"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# GTF (optional)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("gtf")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/annotations/gencode.v48.annotation.gtf.gz"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Proteins FASTA (optional)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("proteins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/annotations/gencode.v48.pc_translations.fa.gz"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Flagger exclusion (optional)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("flagger")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/flagger/flagger.exclude.bed"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),s("p",[a._v("This generates in the current working directory ("),s("code",[a._v("cosigt/cosigt_smk")]),a._v("):")]),a._v(" "),s("ul",[s("li",[a._v("the "),s("code",[a._v("resources")]),a._v(" folder")]),a._v(" "),s("li",[a._v("the "),s("code",[a._v("config/config.yaml")]),a._v(" file")]),a._v(" "),s("li",[a._v("the "),s("code",[a._v("cosigt_smk.sh")]),a._v(" script")])]),a._v(" "),s("p",[a._v("In "),s("code",[a._v("resources")]),a._v(" input files are re-organized so that the pipeline knows exactly where they are located. They follow the structure below:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tree resources\n")])])]),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("resources/\n|-- alignments\n|   |-- HG00438.cram -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/alignments/HG00438.final.cram\n|   |-- HG00438.cram.crai -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/alignments/HG00438.final.cram.crai\n|   |-- HG01952.cram -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/alignments/HG01952.final.cram\n|   `-- HG01952.cram.crai -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/alignments/HG01952.final.cram.crai\n|-- annotations\n|   |-- gencode.v48.annotation.gtf.gz -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/annotations/gencode.v48.annotation.gtf.gz\n|   |-- gencode.v48.pc_translations.fa.gz -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/annotations/gencode.v48.pc_translations.fa.gz\n|   |-- gencode.v48.pc_translations.fa.gz.fai -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/annotations/gencode.v48.pc_translations.fa.gz.fai\n|   `-- gencode.v48.pc_translations.fa.gz.gzi -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/annotations/gencode.v48.pc_translations.fa.gz.gzi\n|-- assemblies\n|   |-- chr4\n|   |   |-- chr4.subset.fasta.gz -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/assemblies_a/chr4.subset.fasta.gz\n|   |   |-- chr4.subset.fasta.gz.fai -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/assemblies_a/chr4.subset.fasta.gz.fai\n|   |   `-- chr4.subset.fasta.gz.gzi -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/assemblies_a/chr4.subset.fasta.gz.gzi\n|   `-- chr6\n|       |-- chr6.subset.fasta.gz -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/assemblies_a/chr6.subset.fasta.gz\n|       |-- chr6.subset.fasta.gz.fai -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/assemblies_a/chr6.subset.fasta.gz.fai\n|       `-- chr6.subset.fasta.gz.gzi -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/assemblies_a/chr6.subset.fasta.gz.gzi\n|-- blacklist\n|   `-- blacklist.txt\n|-- flagger\n|   `-- flagger_blacklist.bed\n|-- reference\n|   |-- GRCh38_full_analysis_set_plus_decoy_hla.fa -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa\n|   `-- GRCh38_full_analysis_set_plus_decoy_hla.fa.fai -> /group/soranzo/davide.bolognini/working/dev/cosigt_test/reference/GRCh38_full_analysis_set_plus_decoy_hla.fa.fai\n`-- regions\n    |-- all_regions.tsv\n    |-- chr4\n    |   `-- chr4_144109303_144140751.bed\n    `-- chr6\n        `-- chr6_31972057_32055418.bed\n")])])]),s("p",[s("code",[a._v("config/config.yaml")]),a._v(" defines resources for pipeline components. For example:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"pggb"')]),a._v(" config/config.yaml\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[a._v("#used by pggb\npggb"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("mem_mb"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" threads"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" time"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" tmpdir"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" /tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("This configures "),s("code",[a._v("pggb")]),a._v(" to run with 20GB RAM, 24 threads, and 40 minutes time limit using "),s("code",[a._v("/tmp")]),a._v(" as a working directory. Resources can be tuned by users based on those available.\n"),s("code",[a._v("cosigt_smk.sh")]),a._v(" script launches the pipeline. By default, the pipeline will be launched using Singularity for tools. Since we havenâ€™t passed a "),s("code",[a._v("--profile")]),a._v(", the workflow will execute locally.\nTo run on a SLURM cluster, pass the profile path (see  the "),s("RouterLink",{attrs:{to:"/setup/setup.html"}},[a._v("â†’ setup section")]),a._v(" for details on how to build an example profile for SLURM).")],1),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Clean resources")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" resources\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Run organize.py")]),a._v("\npython workflow/scripts/organize.py "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$assemblies")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$genome")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$reads")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$output")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gtf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$gtf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--proteins")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$proteins")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--flagger")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$flagger")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--profile")]),a._v(" config/slurm\n")])])]),s("p",[a._v("The entire workflow can then be run with "),s("code",[a._v("sh cosigt_smk.sh")]),a._v(". Users may want to refine the regions provided to "),s("code",[a._v("--bed")]),a._v(" using the "),s("a",{attrs:{href:"#refine-workflow"}},[a._v("refine")]),a._v(" mode od cosigt. This is not required for with the current example.")]),a._v(" "),s("h2",{attrs:{id:"exploring-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exploring-results"}},[a._v("#")]),a._v(" Exploring Results")]),a._v(" "),s("p",[a._v("Following, an overview of the primary outputs produced by the cosigt pipeline")]),a._v(" "),s("h3",{attrs:{id:"genotyping-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#genotyping-results"}},[a._v("#")]),a._v(" Genotyping Results")]),a._v(" "),s("p",[a._v("Cosigt performs "),s("code",[a._v("haplotype deconvolution")]),a._v(", identifying the combination of haplotypes from the pangenome that best matches the short-read sequencing data for a given region. Details on this step are described in the "),s("RouterLink",{attrs:{to:"/workflow/workflow.html"}},[a._v("â†’ workflow section")]),a._v(".\nAfter running the pipeline, genotyping outputs are stored under:")],1),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tree cosigt_results/cosigt\n")])])]),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("cosigt_results/cosigt/\n|-- HG00438\n|   |-- chr4\n|   |   `-- chr4_144109303_144140751\n|   |       |-- chr4_144109303_144140751.cosigt_genotype.tsv\n|   |       |-- chr4_144109303_144140751.sorted_combos.tsv.gz\n|   |       `-- viz\n|   |           |-- chr4_144109303_144140751.ava.png\n|   |           |-- HG00438#1_to_grch38#1#chr4.png\n|   |           `-- HG00438#2_to_grch38#1#chr4.png\n|   `-- chr6\n|       `-- chr6_31972057_32055418\n|           |-- chr6_31972057_32055418.cosigt_genotype.tsv\n|           |-- chr6_31972057_32055418.sorted_combos.tsv.gz\n|           `-- viz\n|               |-- chr6_31972057_32055418.ava.png\n|               |-- HG00438#1_to_grch38#1#chr6.png\n|               `-- HG00438#2_to_grch38#1#chr6.png\n`-- HG01952\n    |-- chr4\n    |   `-- chr4_144109303_144140751\n    |       |-- chr4_144109303_144140751.cosigt_genotype.tsv\n    |       |-- chr4_144109303_144140751.sorted_combos.tsv.gz\n    |       `-- viz\n    |           |-- chr4_144109303_144140751.ava.png\n    |           |-- HG01952#1_to_grch38#1#chr4.png\n    |           `-- HG01952#2_to_grch38#1#chr4.png\n    `-- chr6\n        `-- chr6_31972057_32055418\n            |-- chr6_31972057_32055418.cosigt_genotype.tsv\n            |-- chr6_31972057_32055418.sorted_combos.tsv.gz\n            `-- viz\n                |-- chr6_31972057_32055418.ava.png\n                |-- HG01952#1_to_grch38#1#chr6.png\n                `-- HG01952#2_to_grch38#1#chr6.png\n\n")])])]),s("p",[a._v("Each region directory contains:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("*.cosigt_genotype.tsv")]),a._v(": best-matching haplotype pair ("),s("code",[a._v("haplotype.1")]),a._v(", "),s("code",[a._v("haplotype.2")]),a._v(") selected to maximize the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cosine_similarity",target:"_blank",rel:"noopener noreferrer"}},[a._v("cosine similarity"),s("OutboundLink")],1),a._v(" to the sample.")]),a._v(" "),s("li",[s("code",[a._v("*.sorted_combos.tsv.gz")]),a._v(": cosine similarity scores for all tested haplotype combinations.")]),a._v(" "),s("li",[s("code",[a._v("viz/")]),a._v(": visualizations of alignments between predicted haplotypes and the reference.\nOne example for "),s("code",[a._v("HG00438")]),a._v(" at the C4 locus ("),s("code",[a._v("chr6_31972057_32055418")]),a._v("):")])]),a._v(" "),s("p",[s("a",{attrs:{href:"./ava.png"}},[s("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:t(360),width:"650"}})])]),a._v(" "),s("p",[a._v("In this case, both predicted haplotypes ("),s("code",[a._v("HG00438#1")]),a._v(", "),s("code",[a._v("HG00438#2")]),a._v(") are structurally similar to each other but diverge from the reference ("),s("code",[a._v("grch38#chr6")]),a._v("), due to a duplication absent in the predicted haplotypes.")]),a._v(" "),s("h3",{attrs:{id:"structural-clustering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#structural-clustering"}},[a._v("#")]),a._v(" Structural Clustering")]),a._v(" "),s("p",[a._v("To summarize major structural variation patterns, cosigt performs clustering of haplotypes based on graph similarity (see the "),s("RouterLink",{attrs:{to:"/workflow/workflow.html"}},[a._v("â†’ workflow section")]),a._v("). Outputs are stored in:")],1),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tree cosigt_results/cluster\n")])])]),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("cosigt_results/cluster/\n|-- chr4\n|   `-- chr4_144109303_144140751\n|       |-- chr4_144109303_144140751.clusters.hapdist.norm.tsv\n|       |-- chr4_144109303_144140751.clusters.hapdist.tsv\n|       |-- chr4_144109303_144140751.clusters.json\n|       |-- chr4_144109303_144140751.clusters.medoids.tsv\n|       |-- chr4_144109303_144140751.clusters.metrics.tsv\n|       `-- chr4_144109303_144140751.clusters.tsv\n`-- chr6\n    `-- chr6_31972057_32055418\n        |-- chr6_31972057_32055418.clusters.hapdist.norm.tsv\n        |-- chr6_31972057_32055418.clusters.hapdist.tsv\n        |-- chr6_31972057_32055418.clusters.json\n        |-- chr6_31972057_32055418.clusters.medoids.tsv\n        |-- chr6_31972057_32055418.clusters.metrics.tsv\n        `-- chr6_31972057_32055418.clusters.tsv\n")])])]),s("p",[a._v("File descriptions:")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("*.clusters.tsv")]),a._v("/"),s("code",[a._v("*.clusters.json")]),a._v(": assigned "),s("code",[a._v("haplotype.group")]),a._v(" per "),s("code",[a._v("haplotype.name")]),a._v(" (TSV and JSON formats).")]),a._v(" "),s("li",[s("code",[a._v("*.clusters.hapdist.tsv")]),a._v(": pairwise haplotype distances between groups.")]),a._v(" "),s("li",[s("code",[a._v("*.clusters.hapdist.norm.tsv")]),a._v(": normalized version of the above (scaled to max pairwise distance).")]),a._v(" "),s("li",[s("code",[a._v("*.clusters.medoids.tsv")]),a._v(": representative haplotype (medoid) for each group.")]),a._v(" "),s("li",[s("code",[a._v("*.clusters.metrics.tsv")]),a._v(": clustering parameters (e.g., eps) used.")])]),a._v(" "),s("p",[a._v("Visualizations of clusters can be found in "),s("code",[a._v("cosigt_test/odgi/viz/{chromosome}/{region}")]),a._v(". An example for the C4 locus:")]),a._v(" "),s("p",[s("a",{attrs:{href:"./viz.png"}},[s("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:t(361),width:"650"}})])]),a._v(" "),s("p",[a._v("Nodes are oriented relative to the reference ("),s("code",[a._v("grch38#1#chr6")]),a._v(") and colored by path coverage (based on the "),s("a",{attrs:{href:"https://loading.io/color/feature/Spectral-11/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Spectral-11"),s("OutboundLink")],1),a._v(" palette). Haplotypes are grouped and ordered by cluster, facilitating visual comparison of structural similarity.")]),a._v(" "),s("h3",{attrs:{id:"genes-annotation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#genes-annotation"}},[a._v("#")]),a._v(" Genes annotation")]),a._v(" "),s("p",[a._v("If gene annotations and protein sequences were provided, cosigt uses pangene to build gene graphs and project annotations onto the assemblies. An example visualization for the C4 locus:")]),a._v(" "),s("p",[s("a",{attrs:{href:"./pangene.png"}},[s("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:t(362),width:"650"}})])]),a._v(" "),s("h3",{attrs:{id:"interactive-plot-of-genotyping-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interactive-plot-of-genotyping-results"}},[a._v("#")]),a._v(" Interactive plot of genotyping results")]),a._v(" "),s("p",[a._v("The cosigt pipeline includes an interactive "),s("a",{attrs:{href:"https://github.com/davidebolo1993/cosigt/blob/master/cosigt_smk/workflow/scripts/app.r",target:"_blank",rel:"noopener noreferrer"}},[a._v("visualization tool"),s("OutboundLink")],1),a._v(" that enables dynamic exploration of genotyping outcomes across samples and regions. You can launch the app as follows:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" workflow/scripts\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" runapp.sh "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/cosigt_test\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#Listening on http://0.0.0.0:3838")]),a._v("\n")])])]),s("p",[a._v("Then, open your web browser and navigate to "),s("code",[a._v("http://0.0.0.0:3838")]),a._v(" to view the results. For example:")]),a._v(" "),s("p",[s("a",{attrs:{href:"./app.png"}},[s("img",{staticStyle:{display:"block",margin:"0 auto"},attrs:{src:t(363),width:"650"}})])]),a._v(" "),s("p",[a._v("The app primarily visualizes short-read coverage ("),s("code",[a._v("Sample Vector Coverage")]),a._v(", blue dots, left y-axis) versus haplotype coverage ("),s("code",[a._v("Pangenome Vector Coverage")]),a._v(", orange dots, right y-axis) across graph nodes ("),s("code",[a._v("Cumulative Haplotype Length")]),a._v(", x-axis). Each dot represents a graph node, and the "),s("code",[a._v("Cumulative Haplotype Length")]),a._v(" accounts for the length of each node.\nFor each region of interest (selectable via the "),s("code",[a._v("Region")]),a._v(" menu) and sample (via the "),s("code",[a._v("Sample")]),a._v(" menu), you can display up to two short-read vs haplotype coverage comparisons: the first in the upper panel and the second in the lower panel. This allows you to compare the cosigt genotyping prediction against the expected haplotype coverage, helping to identify matches or coverage anomalies.")]),a._v(" "),s("h2",{attrs:{id:"configure-and-run-the-workflow-custom-allels-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configure-and-run-the-workflow-custom-allels-branch"}},[a._v("#")]),a._v(" Configure and run the workflow ("),s("code",[a._v("custom_allels")]),a._v(" branch)")]),a._v(" "),s("p",[a._v("As an alternative to running from raw assemblies, cosigt can also be launched directly from a predefined set of alleles â€” for example, those generated in a previous run:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tree cosigt_results/bedtools/getfasta\n")])])]),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("cosigt_results/bedtools/getfasta/\n|-- chr4\n|   `-- chr4_144109303_144140751\n|       |-- chr4_144109303_144140751.fasta.gz\n|       |-- chr4_144109303_144140751.fasta.gz.fai\n|       `-- chr4_144109303_144140751.fasta.gz.gzi\n`-- chr6\n    `-- chr6_31972057_32055418\n        |-- chr6_31972057_32055418.fasta.gz\n        |-- chr6_31972057_32055418.fasta.gz.fai\n        `-- chr6_31972057_32055418.fasta.gz.gzi\n")])])]),s("p",[a._v("To use this mode, switch to the "),s("code",[a._v("custom_alleles")]),a._v(" branch:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout custom_alleles\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" cosigt_smk\npython workflow/scripts/organize.py "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-h")]),a._v("\n")])])]),s("p",[a._v("The script accepts a similar set of arguments to the "),s("code",[a._v("master")]),a._v(" and "),s("code",[a._v("ancient_dna")]),a._v(" branches. The key difference lies in the "),s("code",[a._v("-a")]),a._v(" argument, which now expects a TSV mapping each region to its corresponding allele FASTA file (can be bgzipped). Example:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/all_map.tsv\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" cosigt_results/bedtools/getfasta/*/*/*gz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("basename")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("$(")]),a._v("dirname $f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$id")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$f")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/all_map.tsv\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),s("p",[a._v("Then run:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Clean previous resources")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" resources\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Alleles")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("alleles")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/all_map.tsv"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# New output directory")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("readlink "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PWD")]),a._v("/cosigt_results_alleles"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Launch organize.py")]),a._v("\npython workflow/scripts/organize.py "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$alleles")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-g")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$genome")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$reads")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$bed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$output")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$map")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gtf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$gtf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--proteins")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$proteins")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--flagger")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$flagger")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--profile")]),a._v(" config/slurm\n")])])]),s("p",[a._v("And finally:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" cosigt_smk.sh\n")])])]),s("p",[a._v("The output structure and interpretation remain identical to those described in the "),s("a",{attrs:{href:"#exploring-results"}},[a._v("previuos sections")]),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"refine-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#refine-workflow"}},[a._v("#")]),a._v(" Refine Workflow")]),a._v(" "),s("p",[a._v("In addition to the main "),s("strong",[a._v("cosigt")]),a._v(" workflow, our Snakemake pipeline also supports a "),s("strong",[a._v("refine")]),a._v(" mode (available in both the "),s("code",[a._v("master")]),a._v(" and "),s("code",[a._v("ancient_dna")]),a._v(" branches)."),s("br"),a._v("\nThis mode attempts to dynamically extend the input regions at both flanks to retain as many haplotypes as possible during the "),s("code",[a._v("impg")]),a._v(" step, up to a configurable extension threshold (default: Â±60 kb).\nTo run the refine workflow, simply replace "),s("code",[a._v('"cosigt"')]),a._v(" with "),s("code",[a._v('"refine"')]),a._v(" in the "),s("code",[a._v("cosigt_smk.sh")]),a._v(" script.\nThe output is a BED file containing the refined regions in "),s("code",[a._v("cosigt_results/refine/regions_refined.bed")]),a._v(".\nThis refined BED file can then be used as input for a new cosigt run by replacing the original regions BED file."),s("br"),a._v("\nIf you reuse the same output directory ("),s("code",[a._v("--output")]),a._v("), the pipeline will skip the initial query-to-target alignment step, recycling those generated in the "),s("code",[a._v("refine")]),a._v(" mode.")])])}),[],!1,null,null,null);s.default=n.exports}}]);